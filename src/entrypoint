#!/usr/bin/python3

# standard libraries
import os
import pandas as pd
import sys
from threading import Thread
import yfinance as yf

# custom modules
from metrics import Metrics

# environment variables and defaults
EARNINGS_YIELD_THRESHOLD = os.environ.get('EARNINGS_YIELD_THRESHOLD', 0.08)
RETURN_ON_ASSETS_THRESHOLD = os.environ.get('RETURN_ON_ASSETS_THRESHOLD', 0.1)
EQUITY_TO_DEBT_THRESHOLD = os.environ.get('EQUITY_TO_DEBT_THRESHOLD', 1)
FREE_CASH_FLOW_THRESHOLD = os.environ.get('FREE_CASH_FLOW_THRESHOLD', 1)


def run(infile):
    """
    Does the actual processing of the data
    """
    snp = pd.read_csv(infile)

    tickers = list(snp.to_dict()['symbol'].values())

    attrs = Metrics()

    for i in range(0, len(tickers)):
        try:
            print(tickers[i])
            # grab the desired stock attributes
            symbol = yf.Ticker(tickers[i])
            print(symbol.ticker)
            roa = round(attrs.avg_return_on_assets(symbol), 2)
            roe = round(attrs.avg_return_on_equity(symbol), 2)
            mce = attrs.market_cap_to_equity(symbol)
            niev = round(attrs.net_income_to_ev(symbol), 2)
            aegr = attrs.avg_earnings_growth_rate(symbol)
            afcf = attrs.avg_fcf_growth_rate(symbol)
            inc = attrs.inc_date(symbol)
            avrt = round(attrs.average_returns(roa, roe), 2)
            wacc = round(attrs.wacc(symbol, avrt), 2)
            fytd = round(attrs.years_to_double(wacc, avrt), 2)


            # input scores into spreadsheet
            snp.loc[i, 'roa'] = roa
            snp.loc[i, 'roe'] = roe
            snp.loc[i, 'mce'] = mce
            snp.loc[i, 'niev'] = niev
            snp.loc[i, 'aegr'] = aegr
            snp.loc[i, 'afcf'] = afcf
            snp.loc[i, 'inc'] = inc
            snp.loc[i, 'avrt'] = avrt
            snp.loc[i, 'wacc'] = wacc
            snp.loc[i, 'ytd'] = fytd

            snp.to_csv(infile, index=False)

        except KeyboardInterrupt:
            continue


def main():
    """
    Get the source CSV file
    The source file has tickers for all relevant stocks \
            pre-configured in the 'Symbol' column
    For each ticker symbol, retrieve all of the desired \
            business attributes, and push them to the \
            CSV.
    """

    #files = ["data/sp500.csv", "data/ndaq.csv", "data/cheap.csv"]
    files = ["data/sp500.csv"]

    for infile in files:
        run(infile)


if __name__ == "__main__":
    main()
